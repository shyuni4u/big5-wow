{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst StyledCheckboxLabel = styled.label`\n  display: inline-block;\n  position: relative;\n  font-family: ${({\n  theme\n}) => theme.fontFamily};\n  font-size: ${({\n  theme\n}) => theme.fontSizes.body14};\n  color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayA : ({\n  theme\n}) => theme.colors.black};\n  text-align: left;\n  line-height: 20px;\n  width: 100%;\n  height: 36px;\n  padding: 8px 0;\n  border-radius: 4px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n`;\nconst StyledCheckboxText = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 25px;\n  font-family: ${({\n  theme\n}) => theme.fontFamily};\n  font-size: ${({\n  theme\n}) => theme.fontSizes.body14};\n  color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayA : ({\n  theme\n}) => theme.colors.black};\n  text-align: left;\n  line-height: 20px;\n  margin: 0;\n`;\nconst StyledCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  position: absolute;\n  opacity: 0;\n  height: 0;\n  width: 0;\n`;\nconst StyledCheckboxMarkIn = styled.span`\n  position: absolute;\n  top: calc(8px + 3px);\n  left: calc(0px + 7px);\n  width: 7px;\n  height: 12px;\n  border: solid ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-radius: 2px;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border-width: 0 2px 2px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  display: ${props => props.checked ? 'inherit' : 'none'};\n`;\nconst StyledCheckboxMarkOut = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 0px;\n  width: 20px;\n  height: 20px;\n  border-radius: 2px;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border: solid 1px ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : props.checked ? ({\n  theme\n}) => theme.colors.primary : ({\n  theme\n}) => theme.colors.Gray8};\n`;\nconst StyledRadioButtonMarkIn = styled.span`\n  position: absolute;\n  top: calc(8px + 4px);\n  left: calc(0px + 4px);\n  width: 12px;\n  height: 12px;\n  border: solid ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-radius: 50%;\n  background-color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-width: 0;\n  display: ${props => props.checked ? 'inherit' : 'none'};\n`;\nconst StyledRadioButtonMarkOut = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 0px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border: solid 1px ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : props.checked ? ({\n  theme\n}) => theme.colors.primary : ({\n  theme\n}) => theme.colors.Gray8};\n`;\nexport const Checkbox = props => {\n  return __jsx(StyledCheckboxLabel, {\n    style: props.style\n  }, __jsx(StyledCheckbox, {\n    name: props.name,\n    value: props.value,\n    disabled: props.disabled,\n    checked: props.checked,\n    onChange: props.onChange\n  }), props.radio && __jsx(React.Fragment, null, __jsx(StyledRadioButtonMarkOut, {\n    checked: props.checked,\n    disabled: props.disabled\n  }), __jsx(StyledRadioButtonMarkIn, {\n    checked: props.checked,\n    disabled: props.disabled\n  })), !props.radio && __jsx(React.Fragment, null, __jsx(StyledCheckboxMarkOut, {\n    checked: props.checked,\n    disabled: props.disabled\n  }), __jsx(StyledCheckboxMarkIn, {\n    checked: props.checked,\n    disabled: props.disabled\n  })), __jsx(StyledCheckboxText, {\n    disabled: props.disabled\n  }, props.label));\n};\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}