{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\KimSunWoo\\\\Desktop\\\\web-base\\\\components\\\\organisms\\\\Test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Checkbox from '../atoms/Checkbox';\n/**\r\n  * 1-6번, 10-12번의 경우 전혀 아니다를 1로 시작해서 매우 그렇다를 5로 두고,\r\n  * 7-9번은 전혀 아니다 5로 시작해서 매우 그렇다를 1로 두고 계산합니다.\r\n  * 각 성격타입은 다음과 같으며, 해당 문항을 더한 것이 자신의 점수입니다.\r\n  * 외향성 1+6\r\n  * 신경성 5+10\r\n  * 성실성 4+9\r\n  * 친화성 2+7+12\r\n  * 개방성 3+8+11\r\n*/\n\nvar testList = [{\n  question: '모르는 사람에게 먼저 말을 건다',\n  type: 'extraversion'\n}, {\n  question: '다른 사람이 편안하고 행복한지 확인한다',\n  type: 'agreeableness'\n}, {\n  question: '그림, 글, 음악을 창작한다',\n  type: 'openness to experience'\n}, {\n  question: '모든 일을 사전에 준비한다',\n  type: 'conscientiousness'\n}, {\n  question: '울적하거나 우울함을 느낀다',\n  type: 'neuroticism'\n}, {\n  question: '회식, 파티, 사교모임을 계획한다',\n  type: 'extraversion'\n}, {\n  question: '사람들을 모욕한다',\n  type: 'agreeableness',\n  reverse: true\n}, {\n  question: '철학적이거나 영적인 문제들을 생각한다',\n  type: 'openness to experience',\n  reverse: true\n}, {\n  question: '일이나 물건을 정리하지 않고 어지럽게 그냥 둔다',\n  type: 'conscientiousness',\n  reverse: true\n}, {\n  question: '스트레스나 걱정을 느낀다',\n  type: 'neuroticism'\n}, {\n  question: '어려운 단어를 사용한다',\n  type: 'openness to experience'\n}, {\n  question: '타인의 감정에 공감한다',\n  type: 'agreeableness'\n}];\nvar strValues = ['전혀 아니다', '별로 아니다', '보통이다', '약간 그렇다', '매우 그렇다']; // type TestItem = typeof testList\n\nexport var Test = function Test() {\n  _s();\n\n  var _useState = useState(0),\n      processIndex = _useState[0],\n      setProcessIndex = _useState[1];\n\n  var _useState2 = useState([]),\n      valueList = _useState2[0],\n      setValueList = _useState2[1];\n\n  var MAX_SCORE = 5;\n  useEffect(function () {\n    setValueList(testList.map(function () {\n      return -1;\n    }));\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Big5 TEST\"), __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, testList.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      style: {\n        display: index === processIndex ? 'inherit' : 'none'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, item.question), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, strValues.map(function (subItem, subIndex) {\n      return __jsx(Checkbox, {\n        key: subIndex,\n        radio: true,\n        label: subItem,\n        checked: valueList[index] === (item.reverse ? MAX_SCORE - subIndex : subIndex + 1),\n        onChange: function onChange() {\n          var tmp = _toConsumableArray(valueList);\n\n          tmp[index] = item.reverse ? MAX_SCORE - subIndex : subIndex + 1;\n          setValueList(tmp);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      });\n    })));\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    disabled: processIndex === 0,\n    onClick: function onClick() {\n      var tmp = _toConsumableArray(valueList);\n\n      tmp[processIndex] = -1;\n      setValueList(tmp);\n      setProcessIndex(function (prev) {\n        return prev - 1;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uC804\"), processIndex + 1, \" / \", testList.length, __jsx(\"button\", {\n    type: \"button\",\n    disabled: valueList[processIndex] === -1,\n    onClick: function onClick() {\n      return processIndex + 1 === testList.length ? alert('결과창 이동') : setProcessIndex(function (prev) {\n        return prev + 1;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, processIndex + 1 === testList.length ? '결과보기' : '다음')), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, valueList.join(', ')));\n};\n\n_s(Test, \"TdmoCezEYR2PTSJOZV0cFGo0k28=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/KimSunWoo/Desktop/web-base/components/organisms/Test.tsx"],"names":["React","useState","useEffect","Checkbox","testList","question","type","reverse","strValues","Test","processIndex","setProcessIndex","valueList","setValueList","MAX_SCORE","map","item","index","display","subItem","subIndex","tmp","prev","length","alert","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Checkbox from '../atoms/Checkbox'\r\n\r\n/**\r\n  * 1-6번, 10-12번의 경우 전혀 아니다를 1로 시작해서 매우 그렇다를 5로 두고,\r\n  * 7-9번은 전혀 아니다 5로 시작해서 매우 그렇다를 1로 두고 계산합니다.\r\n  * 각 성격타입은 다음과 같으며, 해당 문항을 더한 것이 자신의 점수입니다.\r\n  * 외향성 1+6\r\n  * 신경성 5+10\r\n  * 성실성 4+9\r\n  * 친화성 2+7+12\r\n  * 개방성 3+8+11\r\n*/\r\nconst testList = [\r\n  {\r\n    question: '모르는 사람에게 먼저 말을 건다',\r\n    type: 'extraversion'\r\n  },\r\n  {\r\n    question: '다른 사람이 편안하고 행복한지 확인한다',\r\n    type: 'agreeableness'\r\n  },\r\n  {\r\n    question: '그림, 글, 음악을 창작한다',\r\n    type: 'openness to experience'\r\n  },\r\n  {\r\n    question: '모든 일을 사전에 준비한다',\r\n    type: 'conscientiousness'\r\n  },\r\n  {\r\n    question: '울적하거나 우울함을 느낀다',\r\n    type: 'neuroticism'\r\n  },\r\n  {\r\n    question: '회식, 파티, 사교모임을 계획한다',\r\n    type: 'extraversion'\r\n  },\r\n  {\r\n    question: '사람들을 모욕한다',\r\n    type: 'agreeableness',\r\n    reverse: true\r\n  },\r\n  {\r\n    question: '철학적이거나 영적인 문제들을 생각한다',\r\n    type: 'openness to experience',\r\n    reverse: true\r\n  },\r\n  {\r\n    question: '일이나 물건을 정리하지 않고 어지럽게 그냥 둔다',\r\n    type: 'conscientiousness',\r\n    reverse: true\r\n  },\r\n  {\r\n    question: '스트레스나 걱정을 느낀다',\r\n    type: 'neuroticism'\r\n  },\r\n  {\r\n    question: '어려운 단어를 사용한다',\r\n    type: 'openness to experience'\r\n  },\r\n  {\r\n    question: '타인의 감정에 공감한다',\r\n    type: 'agreeableness'\r\n  }\r\n]\r\n\r\nconst strValues = [\r\n  '전혀 아니다',\r\n  '별로 아니다',\r\n  '보통이다',\r\n  '약간 그렇다',\r\n  '매우 그렇다'\r\n]\r\n\r\n// type TestItem = typeof testList\r\n\r\nexport const Test: React.FC = () => {\r\n  const [processIndex, setProcessIndex] = useState<number>(0)\r\n  const [valueList, setValueList] = useState<number[]>([])\r\n  const MAX_SCORE = 5\r\n\r\n  useEffect(() => {\r\n    setValueList(testList.map(() => -1))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Big5 TEST\r\n      </p>\r\n      <main>\r\n        {testList.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            style={{ display: index === processIndex ? 'inherit' : 'none' }}\r\n          >\r\n            <div>\r\n              {item.question}\r\n            </div>\r\n            <div>\r\n              {strValues.map((subItem, subIndex) => (\r\n                <Checkbox\r\n                  key={subIndex}\r\n                  radio={true}\r\n                  label={subItem}\r\n                  checked={valueList[index] === (item.reverse ? MAX_SCORE - subIndex : subIndex + 1)}\r\n                  onChange={() => {\r\n                    const tmp = [...valueList]\r\n                    tmp[index] = item.reverse ? MAX_SCORE - subIndex : subIndex + 1\r\n                    setValueList(tmp)\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n      <div>\r\n        <button type='button'\r\n          disabled={processIndex === 0}\r\n          onClick={() => {\r\n            const tmp = [...valueList]\r\n            tmp[processIndex] = -1\r\n            setValueList(tmp)\r\n            setProcessIndex(prev => prev - 1)\r\n          }}\r\n        >\r\n          이전\r\n        </button>\r\n        {processIndex + 1} / {testList.length}\r\n        <button type='button'\r\n          disabled={valueList[processIndex] === -1}\r\n          onClick={() => processIndex + 1 === testList.length ? alert('결과창 이동') : setProcessIndex(prev => prev + 1)}\r\n        >\r\n          {processIndex + 1 === testList.length ? '결과보기' : '다음'}\r\n        </button>\r\n      </div>\r\n      <div>{valueList.join(', ')}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}