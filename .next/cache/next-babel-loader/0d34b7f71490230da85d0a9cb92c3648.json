{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KimSunWoo\\\\Desktop\\\\web-base\\\\components\\\\atoms\\\\Checkbox.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst StyledCheckboxLabel = styled.label`\n  display: inline-block;\n  position: relative;\n  font-family: ${props => props.theme.fontFamily};\n  font-size: ${props => props.theme.fontSizes.body14};\n  color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayA : ({\n  theme\n}) => theme.colors.black};\n  text-align: left;\n  line-height: 20px;\n  width: 100%;\n  height: 36px;\n  padding: 8px 0;\n  border-radius: 4px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n`;\nconst StyledCheckboxText = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 25px;\n  font-family: ${({\n  theme\n}) => theme.fontFamily};\n  font-size: ${({\n  theme\n}) => theme.fontSizes.body14};\n  color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayA : ({\n  theme\n}) => theme.colors.black};\n  text-align: left;\n  line-height: 20px;\n  margin: 0;\n`;\nconst StyledCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  position: absolute;\n  opacity: 0;\n  height: 0;\n  width: 0;\n`;\nconst StyledCheckboxMarkIn = styled.span`\n  position: absolute;\n  top: calc(8px + 3px);\n  left: calc(0px + 7px);\n  width: 7px;\n  height: 12px;\n  border: solid ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-radius: 2px;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border-width: 0 2px 2px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  display: ${props => props.checked ? 'inherit' : 'none'};\n`;\nconst StyledCheckboxMarkOut = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 0px;\n  width: 20px;\n  height: 20px;\n  border-radius: 2px;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border: solid 1px ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : props.checked ? ({\n  theme\n}) => theme.colors.primary : ({\n  theme\n}) => theme.colors.Gray8};\n`;\nconst StyledRadioButtonMarkIn = styled.span`\n  position: absolute;\n  top: calc(8px + 4px);\n  left: calc(0px + 4px);\n  width: 12px;\n  height: 12px;\n  border: solid ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-radius: 50%;\n  background-color: ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : ({\n  theme\n}) => theme.colors.primary};\n  border-width: 0;\n  display: ${props => props.checked ? 'inherit' : 'none'};\n`;\nconst StyledRadioButtonMarkOut = styled.span`\n  position: absolute;\n  top: 8px;\n  left: 0px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 5px;\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border: solid 1px ${props => props.disabled ? ({\n  theme\n}) => theme.colors.grayE : props.checked ? ({\n  theme\n}) => theme.colors.primary : ({\n  theme\n}) => theme.colors.Gray8};\n`;\nexport const Checkbox = props => {\n  return __jsx(StyledCheckboxLabel, {\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(StyledCheckbox, {\n    name: props.name,\n    value: props.value,\n    disabled: props.disabled,\n    checked: props.checked,\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), props.radio && __jsx(React.Fragment, null, __jsx(StyledRadioButtonMarkOut, {\n    checked: props.checked,\n    disabled: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), __jsx(StyledRadioButtonMarkIn, {\n    checked: props.checked,\n    disabled: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), !props.radio && __jsx(React.Fragment, null, __jsx(StyledCheckboxMarkOut, {\n    checked: props.checked,\n    disabled: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), __jsx(StyledCheckboxMarkIn, {\n    checked: props.checked,\n    disabled: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })), __jsx(StyledCheckboxText, {\n    disabled: props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, props.label));\n};\nexport default Checkbox;","map":{"version":3,"sources":["C:/Users/KimSunWoo/Desktop/web-base/components/atoms/Checkbox.tsx"],"names":["React","styled","StyledCheckboxLabel","label","props","theme","fontFamily","fontSizes","body14","disabled","colors","grayA","black","StyledCheckboxText","span","StyledCheckbox","input","attrs","type","StyledCheckboxMarkIn","grayE","primary","white","checked","StyledCheckboxMarkOut","Gray8","StyledRadioButtonMarkIn","StyledRadioButtonMarkOut","Checkbox","style","name","value","onChange","radio"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport type CheckboxProps = {\r\n  /**\r\n   * Attribute [name] of <input> tag\r\n   */\r\n  name?: string\r\n  /**\r\n   * Label for checkbox button\r\n   */\r\n  label?: string\r\n  /**\r\n   * Value of <input> tag\r\n   */\r\n  value?: string | number\r\n  /**\r\n   * If you make this 'true' the UI will change to the radio type\r\n   */\r\n  radio?: boolean\r\n  /**\r\n   * Checked\r\n   */\r\n  checked?: boolean\r\n  /**\r\n   * Disabled\r\n   */\r\n  disabled?: boolean\r\n  /**\r\n   * CSS (label)\r\n   */\r\n  style?: React.CSSProperties\r\n  /**\r\n   * Optional change handler\r\n   */\r\n  onChange?: () => void\r\n}\r\n\r\nconst StyledCheckboxLabel = styled.label<CheckboxProps>`\r\n  display: inline-block;\r\n  position: relative;\r\n  font-family: ${props => props.theme.fontFamily};\r\n  font-size: ${props => props.theme.fontSizes.body14};\r\n  color: ${props => props.disabled ? ({theme}) => theme.colors.grayA : ({theme}) => theme.colors.black};\r\n  text-align: left;\r\n  line-height: 20px;\r\n  width: 100%;\r\n  height: 36px;\r\n  padding: 8px 0;\r\n  border-radius: 4px;\r\n  overflow-x: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledCheckboxText = styled.span<CheckboxProps>`\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 25px;\r\n  font-family: ${({theme}) => theme.fontFamily};\r\n  font-size: ${({theme}) => theme.fontSizes.body14};\r\n  color: ${props => props.disabled ? ({theme}) => theme.colors.grayA : ({theme}) => theme.colors.black};\r\n  text-align: left;\r\n  line-height: 20px;\r\n  margin: 0;\r\n`\r\n\r\nconst StyledCheckbox = styled.input.attrs({\r\n  type: 'checkbox'\r\n})<CheckboxProps>`\r\n  position: absolute;\r\n  opacity: 0;\r\n  height: 0;\r\n  width: 0;\r\n`\r\n\r\nconst StyledCheckboxMarkIn = styled.span<CheckboxProps>`\r\n  position: absolute;\r\n  top: calc(8px + 3px);\r\n  left: calc(0px + 7px);\r\n  width: 7px;\r\n  height: 12px;\r\n  border: solid ${props => props.disabled ? ({theme}) => theme.colors.grayE : ({theme}) => theme.colors.primary};\r\n  border-radius: 2px;\r\n  margin-right: 5px;\r\n  background-color: ${({theme}) => theme.colors.white};\r\n  border-width: 0 2px 2px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n  display: ${props => props.checked ? 'inherit' : 'none'};\r\n`\r\n\r\nconst StyledCheckboxMarkOut = styled.span<CheckboxProps>`\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 0px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 2px;\r\n  margin-right: 5px;\r\n  background-color: ${({theme}) => theme.colors.white};\r\n  border: solid 1px ${\r\n    props => props.disabled\r\n    ? ({theme}) => theme.colors.grayE\r\n    : props.checked\r\n      ? ({theme}) => theme.colors.primary\r\n      : ({theme}) => theme.colors.Gray8\r\n  };\r\n`\r\n\r\nconst StyledRadioButtonMarkIn = styled.span<CheckboxProps>`\r\n  position: absolute;\r\n  top: calc(8px + 4px);\r\n  left: calc(0px + 4px);\r\n  width: 12px;\r\n  height: 12px;\r\n  border: solid ${props => props.disabled ? ({theme}) => theme.colors.grayE : ({theme}) => theme.colors.primary};\r\n  border-radius: 50%;\r\n  background-color: ${props => props.disabled ? ({theme}) => theme.colors.grayE : ({theme}) => theme.colors.primary};\r\n  border-width: 0;\r\n  display: ${props => props.checked ? 'inherit' : 'none'};\r\n`\r\n\r\nconst StyledRadioButtonMarkOut = styled.span<CheckboxProps>`\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 0px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-right: 5px;\r\n  background-color: ${({theme}) => theme.colors.white};\r\n  border: solid 1px ${\r\n    props => props.disabled\r\n    ? ({theme}) => theme.colors.grayE\r\n    : props.checked\r\n      ? ({theme}) => theme.colors.primary\r\n      : ({theme}) => theme.colors.Gray8\r\n  };\r\n`\r\n\r\nexport const Checkbox: React.FC<CheckboxProps> = (props: CheckboxProps) => {\r\n  return (\r\n    <StyledCheckboxLabel\r\n      style={props.style}>\r\n      <StyledCheckbox\r\n        name={props.name}\r\n        value={props.value}\r\n        disabled={props.disabled}\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n      />\r\n      { props.radio && <>\r\n        <StyledRadioButtonMarkOut\r\n          checked={props.checked}\r\n          disabled={props.disabled}\r\n        />\r\n        <StyledRadioButtonMarkIn\r\n          checked={props.checked}\r\n          disabled={props.disabled}\r\n        />\r\n      </>\r\n      }\r\n      { !props.radio && <>\r\n        <StyledCheckboxMarkOut\r\n          checked={props.checked}\r\n          disabled={props.disabled}\r\n        />\r\n        <StyledCheckboxMarkIn\r\n          checked={props.checked}\r\n          disabled={props.disabled}\r\n        />\r\n      </>\r\n      }\r\n      <StyledCheckboxText\r\n        disabled={props.disabled}\r\n      >\r\n        {props.label}\r\n      </StyledCheckboxText>\r\n    </StyledCheckboxLabel>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n"]},"metadata":{},"sourceType":"module"}